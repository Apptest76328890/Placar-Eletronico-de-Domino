// Nome do cache
const CACHE_NAME = 'placar-dominio-v1';

// URLs completas dos arquivos essenciais para o funcionamento offline
const FILES_TO_CACHE = [
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/index.html',  // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/style.css',   // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/script.js',   // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/icon-192x192.png',  // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/icon-512x512.png',  // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/icon-undo.png',     // URL completa
  'https://seu-dominio.com/Placar-Eletronico-de-Domino/manifest.json',  // URL completa
];

// Durante a instalação do service worker, armazenamos os arquivos no cache
self.addEventListener('install', (event) => {
  event.waitUntil(
    caches.open(CACHE_NAME).then((cache) => {
      console.log('Arquivos adicionados ao cache!');
      return cache.addAll(FILES_TO_CACHE); // Adiciona os arquivos essenciais ao cache
    })
  );
});

// Durante a ativação do service worker, removemos caches antigos
self.addEventListener('activate', (event) => {
  event.waitUntil(
    caches.keys().then((cacheNames) => {
      return Promise.all(
        cacheNames.map((cache) => {
          if (cache !== CACHE_NAME) {
            console.log('Cache antigo removido:', cache);
            return caches.delete(cache); // Limpa caches antigos
          }
        })
      );
    })
  );
});

// Durante o fetch, tentamos responder com arquivos do cache, e se não houver no cache, buscamos na rede
self.addEventListener('fetch', (event) => {
  event.respondWith(
    caches.match(event.request).then((cachedResponse) => {
      if (cachedResponse) {
        // Se o arquivo estiver no cache, serve do cache
        return cachedResponse;
      }

      // Se o arquivo não estiver no cache, faz a requisição para a rede
      return fetch(event.request).then((networkResponse) => {
        if (networkResponse && networkResponse.ok) {
          // Se a requisição da rede for bem-sucedida, adiciona ao cache
          caches.open(CACHE_NAME).then((cache) => {
            cache.put(event.request, networkResponse.clone());
          });
        }
        return networkResponse; // Retorna o conteúdo da rede
      });
    })
  );
});

// Função para verificar e atualizar o cache periodicamente
self.addEventListener('sync', (event) => {
  if (event.tag === 'update-cache') {
    event.waitUntil(updateCache());
  }
});

// Função para atualizar o cache com conteúdo da internet
function updateCache() {
  return caches.open(CACHE_NAME).then((cache) => {
    // A atualização deve ser feita para cada arquivo essencial
    return fetch('https://seu-dominio.com/Placar-Eletronico-de-Domino/index.html')
      .then((response) => {
        if (response && response.ok) {
          console.log('Atualizando cache...');
          return cache.put('https://seu-dominio.com/Placar-Eletronico-de-Domino/index.html', response);
        }
      })
      .catch((error) => {
        console.log('Erro ao atualizar o cache:', error);
      });
  });
}
